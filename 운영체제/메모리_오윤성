# Memory, 메모리 

### 코드영역

실행할 프로그램의 코드가 저장되는 영역으로 텍스트 영역이라고도 부름.

CPU는 코드 영역에 저장된 명령어를 하나씩 가져가서 처리함.

### 데이터 영역

전역 변수와 정적(static)변수가 저장되는 영역

프로그램의 시작과 함께 할당되며, 프로그램이 종료되면 소멸함.

- **프로그램이 종료될 때까지 메모리상에 존재**

```kotlin
val a : Int =10 // 데이터 영역에 할당

fun main(){
	
}
```

### 스택 영역

- 함수의 호출과 관계되는 지역 변수와 매개변수가 저장되는 영역
- 함수 호출과 함께 할당되며, 함수의 호출이 완료되면 소멸함
- 스택 영역에 저장되는 함수의 호출 정보를 스택 프레임이라고 함.
- 스택 영역은 푸시 동작으로 데이터를 저장하고, 팝 동작으로 데이터를 인출
- 스택 영역에 저장되는 변수는 함수 호출시에 생성되며, 함수 호출이 완료되면 사라지게 된다.

```kotlin
val a : Int =10 // 데이터 영역에 할당

fun main(){
	val b = 20 // 스텍 영역에 할당
	
}
fun a(){
	val a = 30 // 스택 영역에 할당
}
```

### 힙 영역

- 사용자가 직접 관리할 수 있는 메모리 영역

동적으로 저장하는 객체, 배열들은 힙에 저장됨.

```kotlin
fun main(){
	val user = User()
	val array = Array(n){}
}
```

스택의 장점

매우 빠른 액세스

변수를 명시적으로 할당 해제할 필요업삳.

공간은 cpu에 의해 효율적으로 관리됨.

힙의 장점

변수는 전역적으로 액세스 할 수 잇음.

메모리 크기 제한없음

상대적으로 느린 액세스